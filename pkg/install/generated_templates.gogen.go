// Code generated by vfsgen; DO NOT EDIT.

package install

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"net/http"
	"os"
	pathpkg "path"
	"time"
)

// templates statically implements the virtual filesystem provided to vfsgen.
var templates = func() http.FileSystem {
	fs := vfsgen۰FS{
		"/": &vfsgen۰DirInfo{
			name:    "/",
			modTime: time.Date(1970, 1, 1, 0, 0, 0, 0, time.UTC),
		},
		"/flux-account.yaml.tmpl": &vfsgen۰CompressedFileInfo{
			name:             "flux-account.yaml.tmpl",
			modTime:          time.Date(1970, 1, 1, 0, 0, 0, 0, time.UTC),
			uncompressedSize: 836,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x92\x4b\xaf\xd3\x30\x10\x85\xf7\xfe\x15\x47\xba\x8b\x0b\xe8\x26\xa8\x3b\x94\x5d\xdb\x05\x0b\x10\x8b\xf0\xd8\x20\x16\x63\x7b\x42\x4d\x5d\x3b\xf2\x23\x3c\xa2\xfc\x77\x94\xa4\x95\x9a\xb6\x20\x55\xba\x3b\x7b\x7c\xc6\x73\xe6\xe8\x2b\x8a\x42\x3c\xe0\xd3\x8e\x11\x39\x74\x46\x31\x48\x29\x9f\x5d\x7a\x82\xb2\x39\x26\x0e\x08\xde\x72\x7c\x02\x39\xbd\x28\x41\x1a\xa7\x8d\xfb\x0e\x0a\x2c\x1e\xe0\x9d\xfd\x0d\xc7\xac\x59\xa3\xf1\x01\xef\xb2\xe4\xe0\x38\x71\xc4\x4f\x93\x76\x53\x4b\x21\x29\xb2\x1e\x27\x70\x8c\x50\xde\xa5\xe0\x2d\x5e\xd4\x9b\xf5\xf6\x65\x29\xa8\x35\x5f\x38\x44\xe3\x5d\x85\x6e\x25\xf6\xc6\xe9\x0a\x1f\x67\x57\xeb\xd9\x94\x38\x70\x22\x4d\x89\x2a\x01\x58\x92\x6c\xe3\x78\x02\x1c\x1d\xb8\x42\x63\xf3\x2f\x71\x7e\xe9\x7b\x98\x06\xe5\x07\x3a\x70\x6c\x49\x31\x86\xe1\xf8\x3e\x5d\x2b\xf4\xfd\xf2\xb5\xef\xc1\x4e\x0f\x83\x18\x73\x39\x37\x14\x24\xa9\x92\x72\xda\xf9\x60\xfe\x50\x32\xde\x95\xfb\x37\xb1\x34\xfe\x75\xb7\x92\x9c\xe8\xe4\x77\x3b\x27\x54\x7b\xcb\xf7\x9a\x15\x21\x5b\x9e\x24\x05\xa8\x35\x6f\x83\xcf\x6d\xac\xf0\xf5\xf1\xd5\xe3\xb7\xa9\x2f\x70\xf4\x39\x28\x5e\x14\x3b\x0e\xf2\xac\x50\xc0\x79\x57\x1f\x85\x9f\xeb\xf7\xff\xd6\x3e\xc3\x86\x9b\x99\x80\xfb\x17\xf5\x96\x6b\x6e\x46\xd1\x69\xd1\xff\xcc\x17\xc0\x75\xb6\x8b\xff\x62\x96\x3f\x58\xa5\x63\x76\x37\xc1\xb9\xb2\x73\x89\xc1\x25\x27\xb7\xc8\xb0\x71\x3c\x69\x6e\x28\xdb\x34\xa3\x32\x12\xf5\x37\x00\x00\xff\xff\xfd\x7f\x67\x6a\x44\x03\x00\x00"),
		},
		"/flux-config.yaml.tmpl": &vfsgen۰CompressedFileInfo{
			name:             "flux-config.yaml.tmpl",
			modTime:          time.Date(1970, 1, 1, 0, 0, 0, 0, time.UTC),
			uncompressedSize: 490,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x91\xc1\x4e\xf3\x30\x10\x84\xef\x7e\x8a\x51\xab\xff\xd6\x54\xfa\x39\xe6\x86\x2a\x21\x71\x00\x0e\x20\xee\xab\x78\xd3\xae\x48\x6d\x63\x6f\x5a\x50\xc8\xbb\x23\xc7\xa8\x18\xc4\xc9\xb6\x66\xe6\x5b\x8f\x3d\x4d\x90\x1e\xdb\x9d\x77\xbd\xec\x6f\x64\xe0\x9d\x77\xca\x4e\xd1\xcc\xb3\x69\x9a\xc6\xac\xf1\x74\x60\xf4\x7e\x18\xfc\x59\xdc\x1e\x92\x30\x26\xb6\x50\x8f\x10\xfd\x49\x2c\x83\xd0\x2d\xf1\x31\x92\x8a\x77\xe8\x7d\x44\x3f\x8c\x6f\x76\x6b\xd6\xb8\xbd\xd0\xaf\x53\x59\xef\x28\x64\x4a\x62\xcd\x10\x8d\x23\x6f\xa0\x07\xfe\x05\x91\x84\x2e\x32\x29\x5b\xb3\x06\x25\x10\x2e\xe9\x0d\xbc\x1e\x38\x9e\x25\x31\x44\x2b\x67\xf1\x3d\x72\x17\x59\xb7\x86\x82\x3c\x73\x4c\xe2\x5d\x8b\xd3\x7f\xf3\xa3\x69\x7d\x97\xdc\xf4\x45\x9c\x6d\xbf\x27\x98\x69\x6a\xc0\x43\xe2\x4a\x2c\x58\xa3\xef\x81\x5b\x3c\x04\x7a\x1d\xb9\xd8\x9c\xc5\x3c\x9b\x23\x2b\x59\x52\x6a\x0d\xe0\xe8\xc8\xed\xf2\x04\x4d\x29\x65\x80\xaf\xf1\xf7\x74\xe4\x14\xa8\x2b\xe4\x62\x5d\xce\x6d\x76\x54\xf2\xa2\x56\xfc\xc2\x9e\x26\x84\x28\x4e\x7b\xac\xfe\xa5\xd5\x5f\xff\xf6\x01\x71\x36\x6f\xae\x72\xaa\x02\x7c\x06\x00\x00\xff\xff\x0f\xf0\x53\x3a\xea\x01\x00\x00"),
		},
		"/flux-deployment.yaml.tmpl": &vfsgen۰CompressedFileInfo{
			name:             "flux-deployment.yaml.tmpl",
			modTime:          time.Date(1970, 1, 1, 0, 0, 0, 0, time.UTC),
			uncompressedSize: 8164,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x59\xdd\x6f\xdb\x46\x12\x7f\xd7\x5f\x31\x50\x0e\x48\x0c\x88\x94\x5d\xb7\xc5\x81\x3d\x17\x97\xe6\xc3\xf5\xa5\x49\x8d\x38\xb9\x43\x9f\xea\x15\x39\x12\x17\x5a\xee\xf2\x76\x96\x52\x05\xa3\xff\xfb\x61\x76\xf9\xb1\x94\x64\xd9\xe8\xdb\xe5\x21\xb6\xc9\xd9\xd9\xf9\x9e\xdf\x0c\x93\x24\x99\x88\x5a\xfe\x1b\x2d\x49\xa3\x33\x10\x75\x4d\xf3\xcd\xc5\x64\x2d\x75\x91\xc1\x5b\xac\x95\xd9\x55\xa8\xdd\xa4\x42\x27\x0a\xe1\x44\x36\x01\xd0\xa2\xc2\x0c\x96\xaa\xf9\xe3\xe1\x01\xe4\x12\xd2\x4f\xa2\x42\xaa\x45\x8e\xf0\xe7\x9f\xed\x7b\xff\x67\x06\x0f\x0f\xe3\xb7\x0f\x0f\x80\xba\x60\x32\xaa\x31\x67\x66\x16\x6b\x25\x73\x41\x19\x5c\x4c\x00\x08\x15\xe6\xce\x58\x7e\x03\x50\x09\x97\x97\xbf\x88\x05\x2a\x0a\x0f\xe2\xbb\x99\xda\x59\xe1\x70\xb5\x0b\x2f\xdd\xae\xc6\x0c\x3e\x63\x6e\x51\x38\x9c\x00\x38\xac\x6a\x25\x1c\xb6\xcc\x22\x0d\xf8\x9f\xd0\xda\x38\xe1\xa4\xd1\x3d\x73\x80\xda\x9a\x0a\x5d\x89\x0d\xa5\xd2\xcc\x6b\x63\x5d\x06\xd3\xcb\xf3\xcb\x8b\x29\xbc\x00\x87\x4a\x45\x14\xe0\x0c\x50\x6e\x45\x8d\x30\xaf\xd0\x59\x99\x13\x2b\x57\x1b\xa9\xdd\x4b\x02\x3e\x9c\xb6\x8c\xd5\x48\x87\x3d\x2d\x00\x3a\x5b\xf8\xdf\xd1\x6e\x64\x8e\xaf\xf3\xdc\x34\xda\x7d\x1a\x13\x02\x6c\x8c\x6a\x2a\xec\x59\x25\x2d\xab\x95\x74\xc9\x1a\x77\xfd\x05\xc4\x56\x70\xc3\x85\xdd\x93\x81\x5f\xc2\x47\x0a\xef\xe0\x88\xaa\xc0\xa5\x68\x94\xfb\x68\x0a\xcc\xe0\xfc\xdb\xf3\x73\x78\x01\xdb\x12\x35\x54\x2c\x0d\x16\x60\x51\x14\x89\xd1\x6a\x37\x83\x2d\xc2\xd6\xe8\x97\x0e\x16\x08\x62\xa1\x90\xed\x91\x97\x95\x29\x26\x2d\xc3\x17\xf0\xa5\x94\x04\x92\x40\x80\xab\xea\x25\x41\x43\x58\xc0\xd2\x58\x58\xa1\x46\x2b\x9c\xd4\x2b\xb8\xbb\xfb\x19\xd6\xb8\xa3\x14\x6e\x34\x7c\xf8\x3b\xc1\x8f\x57\x70\x91\x5e\x9c\xcf\x7a\x2e\xdd\xdd\x41\x05\x02\x61\x31\x96\x83\x0c\x8b\xa2\x11\x0b\x10\x40\x58\x0b\x0e\x8a\xd6\x50\xb0\xc5\x9e\x4d\x2e\x34\x6c\xad\x74\x2c\x68\x7a\xdc\x7e\x2b\xd4\xbd\x31\xb0\xaa\xdd\xee\xad\xb4\xb1\x11\x2b\x2c\x64\x53\x65\xf0\x11\x2b\x63\x77\xb1\x9e\x08\x4b\xa3\x94\xd9\xb2\x46\xed\xd5\x92\xbc\xaa\x0d\xf1\x33\x01\x79\x43\xce\x54\x92\x2d\xb0\xd6\x66\xab\x7f\x2f\x0d\x39\xea\x59\x2c\xa5\xc2\x19\x6c\x4b\x99\x97\xb0\x33\x0d\x6c\xa5\x52\x41\x29\x67\xa0\x30\x9c\x67\xfc\x98\x0f\xf1\x2f\x16\xcc\x56\xb3\xd8\x3d\x03\x8b\xb5\x01\x2b\x5c\x89\x16\x5c\x29\x74\x7b\xf1\x4a\xba\xb2\x59\x80\xe1\x87\x08\x4a\xae\x31\x85\xdf\x4c\xf3\x52\x29\x10\x8a\x4c\x77\xc5\xd8\xd8\x20\x1d\x48\xed\x8c\x3f\x93\x1b\xed\x84\xd4\x68\x67\xb0\x40\x65\xb6\x29\xdc\xe1\x60\xd5\xd2\xb9\x9a\xb2\xf9\xbc\x30\x39\xa5\x1c\x58\x79\xc1\xa9\x83\x7a\xce\xa9\x47\x6e\xbe\x6a\x64\x81\x34\x6f\x08\x93\xda\xca\x8d\x70\xe8\x43\x8f\x15\x49\x4b\x57\xa9\x9e\x53\xe7\x0b\xa2\x32\xc9\x8d\x5e\xca\x55\xff\x0a\x20\x3c\xf8\x28\xea\x2c\x7a\x18\x27\x52\x12\x1d\xfb\xab\x7e\x49\xd7\xcd\x02\xe7\x81\xc9\x10\x7e\x4f\xfa\x64\x2b\xa9\xe4\x27\xa5\xd8\x20\x08\x28\xe4\x72\x89\x96\x8b\x66\xc7\xa1\xcd\xaa\xa1\x30\x7a\x17\x04\x76\xb1\x13\xb8\xb8\x6c\x64\x81\x9d\xd9\x97\x72\x55\x89\x7a\x10\x44\xba\x12\x84\x06\xd4\xce\xee\xbc\x0e\xf7\x81\xe8\x7e\x06\x42\x17\xd0\xe8\xdc\x54\x5c\xad\xfd\xf9\xa0\xed\x47\xef\x4e\xa1\x8b\x9e\x0b\xea\x8d\xe7\x20\x91\x5a\x7f\x1e\x78\x80\xcd\xf0\x17\x3c\x10\x1d\x7b\xd2\x03\xbe\x12\x38\x03\xb2\xe2\x3a\x09\xd7\xb7\xd7\xbe\x08\xc0\x2b\x56\x8b\xe4\x4a\x4b\x3d\x5c\xce\xca\x6d\xd0\xca\xa5\xcc\x7d\xc1\x86\xba\xb1\xb5\x21\xa4\xb3\x67\x18\xb2\xe7\x12\xca\x47\xb0\x22\x1b\x88\xef\x7b\x86\xe1\x40\xd8\xd5\x90\xa6\x8f\x58\x6c\x55\xaf\xb8\x7e\x50\x64\x9a\x71\x09\x7e\xf1\x48\x11\x3e\x3c\x77\xa4\x08\x77\xe6\x7c\x78\x48\x7c\xbf\x7d\xe3\x8d\xfc\x5e\x2a\x7c\x63\xb4\x63\xb9\x7d\xdf\x7d\x9e\xc5\x3b\xd3\x88\xd6\xa3\x8d\x0d\x36\x65\xc3\xb3\x4c\xc5\x88\xd3\x70\x3e\xb4\xd5\x82\x05\x60\x2b\x25\x6d\xb2\x25\x5c\xb8\x80\xed\xc7\xb6\x52\x52\x0f\x06\x37\xb5\x67\x2c\xa9\xbb\xb3\x48\xe1\xa6\x17\xff\x35\xbd\xe9\x22\x8a\x49\x08\x1d\x4b\xe7\x6c\x83\xb3\x91\xdb\xc6\x52\x72\x33\x21\x6a\xaa\xa0\x0b\x77\x1e\xe8\xd9\xcc\xc0\x70\xf5\xdb\x4a\x42\x5f\xc0\x7a\xd2\x9e\x57\x77\xe4\xce\xfb\x21\x3d\x6a\xd6\x58\xae\xde\xac\x49\x1c\xe7\xa3\xd4\x38\x92\x18\x7b\x69\x31\x22\xe7\xbb\x18\x01\x25\x3d\xeb\xf6\xf6\x57\xda\xb8\x23\x22\x9c\x3d\x4f\x86\x67\xf4\xfb\x67\x88\xd1\x42\xb3\x49\xaf\x57\xa8\xfb\x07\x68\x23\xc2\x23\x6d\x9c\x58\xf4\x5d\x59\x1b\x98\x66\xa1\xee\x4f\x41\x56\x62\x85\xd4\xc7\x55\x0a\xef\xa5\x2e\x7c\xec\x54\xdc\xc4\x2c\xe6\x43\x8d\x0c\x0d\x4c\xa1\x20\xe4\x56\xe5\x8f\x72\xca\x33\x2a\x05\xe1\xfa\x2e\x53\x36\x8b\xb4\x30\xf9\x1a\x6d\x9a\x9b\x6a\x6e\xe7\xa1\xe3\xf8\x1f\x73\x27\xfa\x44\xed\xaa\x06\xa3\x4b\x46\x9e\x7c\xab\x13\x2b\x60\x49\xd3\x9e\xc6\x5f\x93\x41\xcb\x50\x9a\x98\x5b\x76\x91\x5e\x7c\x9f\x9e\x8f\x69\x6f\x1b\xa5\x6e\x8d\x92\xf9\x2e\x83\x9b\xe5\x27\xe3\x6e\x2d\x52\xac\x85\x45\x32\x8d\xcd\x91\x62\x57\x58\xfc\x6f\x83\xe4\x46\xcf\x00\xf2\xba\xc9\xe0\xbb\xf3\x6a\xf4\xb0\xf2\xc0\x22\x83\xef\xbf\xfd\x28\x07\x50\x6a\x6c\x7c\x38\x19\x3c\x73\xeb\x01\xea\xe5\xf9\x25\xe3\x34\xa9\x97\xc6\x56\x3e\x4d\x84\xea\xa9\x95\xdc\xa0\x46\xa2\x5b\x6b\x16\x18\x4b\xc0\x26\xbd\x1e\xc7\x4c\xb8\x2a\x30\x1c\x3f\x16\xae\xcc\x60\x2e\x6a\x19\x2c\xbd\xf9\x7e\x2e\x0b\xd4\x4e\xba\x5d\x5a\x37\x8b\x88\x56\x6a\xe9\xa4\x50\x6f\x51\x89\xdd\x1d\x77\x83\x82\x32\xf8\x2e\x22\x70\xb2\x42\xd3\xb8\x23\xef\x18\xd2\xc9\xff\x0f\x51\xa3\x16\x31\x72\xcc\x71\x30\x0e\x01\x54\xdd\x06\xc9\xd0\xe5\x5e\xb2\x62\x4e\x54\x86\x9a\xe4\xe7\x1c\x50\xa6\xed\x6e\x2b\x76\x19\x48\x1d\x62\xee\x25\x85\x33\x44\xe5\x7c\x2f\xeb\x83\xcd\x7e\xd5\x6a\x97\xf9\xc2\xc9\xdc\x18\x71\xfb\x7e\xb8\x68\x61\x04\xa7\x54\x8d\x76\x69\x6c\x8e\xcc\x34\x40\x6c\x46\xd8\x8f\x09\x1e\xa3\xe0\xb1\xec\x1b\x61\x5b\xd9\x03\xd9\x5f\x13\x3f\xca\xd1\x1b\x9d\xab\xc6\xf7\x69\x1e\x14\x02\x9c\xea\x7a\x78\x40\xa2\x4f\x00\xe7\x0e\x3a\xff\xc0\x47\xf7\x40\xed\xd0\xbe\x0a\xcc\x95\xb0\x3c\x20\x2c\xcc\x26\x2a\x00\x27\x40\x67\x68\xc6\xb1\xf2\xd6\x18\x37\x4f\x89\xca\x47\x15\x10\x7a\x74\xeb\x74\x00\x44\xd3\x70\xf3\xac\x23\x89\x38\xa0\xde\x48\x6b\xb4\x87\x1f\x01\xd9\x4d\x3f\x7c\xfd\xe9\xdd\x9b\x5f\x3f\xbd\xbf\xb9\x9e\x06\xc0\x31\x63\x7b\x98\x0d\x5a\x3b\x46\x87\x11\x1b\xdf\xde\x17\xbb\x80\xdd\x9c\x3a\xa6\xe3\x01\xac\x3b\xd4\x71\x08\x4e\x26\x7e\x54\x51\x86\x11\x3c\xe6\x76\xb7\x71\x89\x8e\x80\x6f\x2b\x9d\xf7\x49\xc4\x62\x1f\x3e\xc7\x4e\xf7\xd8\xb9\x1b\xf4\x84\x06\xa1\x1c\x5a\xcd\x83\xdc\x81\xc4\x4b\x6b\xaa\x1e\xbd\x54\xdc\xf6\x05\x71\xb8\xb5\x18\x8e\xcd\xa0\x4c\xbe\xa6\x43\x67\xa3\xde\x64\x47\xec\x32\x98\x7b\x64\x97\x8d\x50\x0d\x1e\xd8\xe4\xa9\x20\xde\x8f\x81\x0e\xe1\x9d\x88\x00\x06\x98\x63\x60\x79\x02\x5a\x3e\x12\x97\x4c\x15\xb0\xf4\x88\x6e\x5c\x1f\x06\xa1\xdb\xc5\xcd\x21\x90\x1c\x00\x41\x3f\x0c\x52\x14\x70\x9d\x5a\xc1\x07\xac\xd0\x91\x39\xf1\xa0\xae\x1c\x43\x2c\x8f\xc5\x1d\x93\x45\x62\xee\x83\x92\xc7\x8a\xc6\x56\x68\x8f\x1f\xa9\xa9\x6b\xb5\x83\x9f\xbf\x7c\xb9\x85\x85\x20\x99\x83\x68\x5c\xc9\xe0\xd5\x37\x01\xa1\x02\x20\x19\x06\x67\x66\xb8\x91\xc2\x6b\x70\x7f\x7d\xf3\xe5\xf7\xd7\x5f\xbf\xfc\xfc\xf5\xee\xdd\xe7\x7b\xef\xa9\xfe\xd1\x87\x77\xbf\xdd\x8f\x72\x75\x23\xac\x14\x0b\x85\xd4\x4d\x92\x11\x43\x1a\xe1\xcb\x36\xf4\xde\x5b\x53\x8d\xc3\x2f\x90\x7d\xc6\x65\x36\x72\xda\x08\x3d\x72\x4d\x66\x15\x06\x03\x70\xb8\x64\x23\x7b\x04\x13\x84\x65\x0e\x16\x0c\x22\x72\x91\x97\x8c\xd5\xf5\x28\x2d\xfb\xf9\x93\x2d\xc5\xdc\x67\x11\x17\x63\xdb\x01\x33\x3a\xd0\x2e\xa3\xfc\xc1\x99\xbf\x24\x17\xba\xb3\xb1\x2b\x91\xe2\x30\x1e\x86\x0e\xb7\x35\x2c\x65\xc3\x76\xf2\xc5\xc2\x6f\xce\xbc\x7f\xa1\x34\x5b\xbf\x28\x32\x5a\x63\xee\x5d\x26\xdd\x38\xec\x93\xa4\x57\xc0\x6f\x09\xf8\xf2\xab\xfe\x51\xda\x4e\x47\x29\x6d\xf2\x34\x57\x0d\x39\xb4\x29\xf7\x1e\x15\x9b\xe4\x2b\x85\x32\x39\x98\xe2\x4d\x20\xbd\xb9\x1d\x29\xc5\x15\x93\xd0\xf9\x45\xd4\x38\x29\x07\x19\x3a\x7a\x8e\x2e\x67\x99\xd2\xaf\x86\xa2\x28\x8f\x25\x6e\xa9\xaf\x26\x23\x80\x2c\x09\xaa\x86\xfc\xaa\xcc\x5b\x4f\x62\x11\x2a\xc1\xc2\xf7\x64\x0f\x4f\xfd\x86\xec\x55\xb7\x76\x3a\xdb\x4f\xc3\xae\x7b\xcd\x7c\x00\x47\x8b\xb2\x91\x20\xdc\xc7\x42\x6f\x4e\x0a\x69\xaf\x0e\x3a\x76\x2c\xd6\xe7\x08\x1c\x0f\xce\xfb\xfa\xf9\x97\xb0\xc9\x13\x7a\x15\xde\x5d\x4b\xe7\xb7\x4b\x24\x9d\xb1\xbb\xbe\xd3\xbc\x67\x50\x1f\xb1\x3b\x95\x73\x1c\x36\x91\xee\x6d\xca\x1c\x4d\xa7\x38\x17\x3a\xd8\xff\xb7\x57\x71\x66\x9e\x65\xc3\xdf\x1f\xde\xfd\x76\xf6\xcf\xb0\xe3\xf2\x13\x41\x43\x68\xe7\x83\xb0\x69\x9c\xe8\xdd\x9c\x77\x2d\x1d\x2b\x19\x55\x3a\xb6\x1c\x27\x5a\x63\xd5\xd5\xc3\xc3\x31\x0a\x5f\x89\x14\x21\x8c\xea\x63\x7c\x6e\x25\x5d\x24\x48\x16\x8d\x12\xc9\x0a\x5d\x42\x4e\x58\xd7\x8f\xa2\xa3\xd2\xb6\x2f\xc5\xc2\x0a\x9d\x97\x9d\x20\x3f\xf9\xbf\xf6\x65\x69\xf5\xe0\xf2\x49\xc7\x78\x30\x0c\x66\x0e\x77\x3e\x62\xe9\x5f\x46\xea\xe8\xc0\x74\x36\x7d\x5a\xb9\x53\x65\xd6\x22\xa7\x42\x1e\x16\x26\x95\xd0\x72\xc9\x03\x0e\x67\x35\xc9\x02\x6d\x08\x90\xbd\x31\xd1\xb7\x09\x43\x08\x8d\x2e\xd0\xee\x45\x9d\x45\x25\x9c\xdc\xa0\xc7\xef\xd4\xe5\xc4\x6a\x14\x79\x47\x0c\xef\xd5\xa4\x66\x51\x48\x7b\x31\x0b\x3f\xbf\x39\x65\xe2\xc8\x74\xfe\xbb\xc2\x31\xd3\xf9\x65\x7d\x67\xfd\x03\xaa\xd3\x4c\xbf\x12\xda\xa3\x81\x45\x68\xfb\xc8\xda\xa3\x39\xcd\xf1\x5d\x25\xe4\x51\x31\x91\x5f\x74\x3c\x0f\xa8\x9e\xea\x9c\xc8\x05\x72\x6b\xd8\x29\xa8\xfd\xf6\x9e\x6d\xcd\x10\x4a\xba\xbd\xfd\x5b\x6c\xef\x16\x8c\xb4\x50\xe3\xea\x04\xf6\xe8\x4e\xb4\xbc\xf8\xd4\xd5\x3f\xd6\xb8\x03\x59\xfc\x78\x0a\x57\x46\xd2\xf0\x51\xe1\x1a\x8b\xa3\xe5\xdf\x91\x3b\xfc\xeb\x5d\xd2\xd3\xd3\xa8\xf8\x76\xbd\x07\xa4\x83\x52\x90\xc7\x44\x46\xab\x1d\x88\x3c\x47\x0a\xfd\xa9\xc4\xb0\x3f\x7f\xd5\xad\x6a\xef\x97\x42\x11\xde\x9f\x4d\x22\x57\x7c\x6e\xc1\xd4\x31\x6f\x74\x4c\x27\xa7\x0b\xc5\x98\xec\x88\x7f\xc8\xd9\x26\x77\x41\xde\xad\xdf\xab\x30\xd6\x6e\x1c\xd0\x4e\xe7\xb0\x30\x66\xbd\x46\xac\x39\x63\x7a\x51\xa7\x2b\xe9\xa6\x33\xa8\x50\xb0\xa1\xb9\x3c\x83\xf0\xcb\x8e\x36\x89\x9a\x9a\x9c\x45\x51\xf5\xd9\x74\xb6\x27\x18\xb3\xe6\xfa\xe4\x90\x8b\xd8\xe3\xf1\xa2\xf1\x0f\xd7\x05\x4d\xd4\xbf\x85\x86\x69\x77\xc7\xb4\xeb\xae\x11\x93\x57\x98\xae\xd2\x19\xfc\x07\x19\xe2\xbf\x51\xa6\x29\xce\x52\xbf\x5b\x74\x66\x8d\x61\x3d\x28\xac\x93\x79\xa3\x84\xed\x9c\xd1\x72\xd9\x07\x06\xed\xad\x57\x5b\xe2\xae\x90\x33\xaf\x74\xcb\x7c\xd3\xad\xb1\x6b\xea\xa7\xfe\xbd\x63\xfe\xa2\x2b\xb1\xc8\x2f\xbe\xb9\x3c\xfc\x3f\x56\xf8\x5d\x88\xbe\xae\xa2\xf5\xdf\xa9\x8c\x3e\x11\x1a\x1f\x5b\xea\xeb\x81\x78\x2f\x42\x3a\x7e\xc9\xc0\xef\xca\x03\xf2\xc7\xa3\xe5\xd8\x11\x7f\xf1\x23\xa1\x73\x87\x76\x73\xe4\x43\x24\x4f\x66\x03\x9e\xe3\x1c\xfd\x21\x06\x16\x62\xcd\x4d\x39\x44\x19\xa1\x8b\xbe\x6e\xbe\x8c\x3e\x90\x46\x5f\x3a\xd9\x39\x7e\x63\xef\xa7\xa3\x74\xa4\xa5\x92\xe4\x50\x27\xad\x08\x57\xd9\xe5\xf9\xe5\xc5\xa4\x9d\x34\x5e\x17\x85\x0c\x9b\x29\x86\x0d\xaf\x79\xe2\x19\xa9\x3c\xbc\x1f\x90\xe3\xa8\x98\x59\x0f\x47\x9e\xe0\x93\xf8\x0f\xce\x8f\xd4\xc1\xe1\xdb\x73\x77\xe9\xaf\x75\x7b\xe5\xdb\x4f\x77\x1d\x0c\xa4\x59\xbf\x71\x6e\x41\x21\xe8\xc2\x38\xea\xb6\xd9\x95\xd8\xf9\x2d\x9f\xda\x0c\x2b\x6a\x4d\xca\x98\x75\x53\x83\x24\x6a\x90\xc0\x68\x20\x53\x21\x7c\x68\x16\x68\x35\x3a\xf4\xeb\xed\xa6\xa6\xe1\xc3\x41\xa1\xa9\x5b\x24\x4e\x3f\x19\x8d\xd3\xf8\x4d\x18\xcb\xe2\x4f\x07\xe1\x72\x1a\x7f\x4d\xe8\xc6\x2b\x2f\xdf\xe8\x4d\x3f\xbc\x4e\x2f\xa6\x93\xff\x05\x00\x00\xff\xff\x48\xd8\x60\xed\xe4\x1f\x00\x00"),
		},
		"/flux-secret.yaml.tmpl": &vfsgen۰CompressedFileInfo{
			name:             "flux-secret.yaml.tmpl",
			modTime:          time.Date(1970, 1, 1, 0, 0, 0, 0, time.UTC),
			uncompressedSize: 137,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\xca\x31\x0a\xc2\x40\x10\x85\xe1\x7e\x4f\xf1\x2e\xb0\x82\xed\x1c\x42\x0b\xc1\x7e\xc8\xbe\xc8\x62\xb2\x19\x93\x89\x18\x86\xdc\x5d\x14\x1b\xcb\x9f\xff\xcb\x39\x27\xb5\x7a\xe5\xbc\xd4\xa9\x09\x9e\xc7\x74\xaf\xad\x08\x2e\xec\x66\x7a\x1a\xe9\x5a\xd4\x55\x12\xd0\x74\xa4\xa0\x1f\xd6\x57\xbe\x55\xcf\x85\x36\x4c\x5b\x04\x6a\x8f\xc3\x49\x47\x2e\xa6\x1d\xb1\xef\x3f\xfa\x4d\x41\xc4\xff\x8d\x00\x5b\xf9\x30\xdf\x8c\x82\xb3\xe9\x63\x65\x7a\x07\x00\x00\xff\xff\x40\x21\xa1\xbb\x89\x00\x00\x00"),
		},
		"/memcache-dep.yaml.tmpl": &vfsgen۰CompressedFileInfo{
			name:             "memcache-dep.yaml.tmpl",
			modTime:          time.Date(1970, 1, 1, 0, 0, 0, 0, time.UTC),
			uncompressedSize: 874,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x93\xcd\x8e\x9b\x40\x10\x84\xef\x3c\x45\x49\xbe\x06\x27\x58\xf2\x85\x5b\x94\x4d\xa2\x95\x92\x95\x2f\x9b\x7b\x7b\x68\xf0\x28\xf3\x97\xe9\xc6\x31\x41\xfb\xee\x11\xfe\xc5\xbb\x3b\x27\xa0\xea\xeb\xa9\x29\xa0\x2c\xcb\x62\x01\xcf\xde\x90\xd9\x71\x83\x86\x93\x8b\x83\xe7\xa0\xe8\x85\x1b\x6c\x07\x7c\x73\xfd\x01\x1a\x71\x74\x14\x0b\x98\x18\x94\x6c\xe0\x0c\xeb\xa9\x63\x78\x56\x6a\x48\x69\x59\x50\xb2\xbf\x38\x8b\x8d\xa1\x06\xa5\x24\x1f\xf7\x55\xf1\xdb\x86\xa6\xc6\xc3\x75\x6c\x71\xb1\xd7\x05\x10\xc8\x73\x7d\xdb\x7d\x1c\x61\x5b\x2c\x9f\xc8\xb3\x24\x32\x8c\x97\x97\xb3\xe9\x78\x5b\x63\x1c\xef\xd5\x71\x04\x87\x66\xb2\x49\x62\x33\x4d\xcc\x9c\x9c\x35\x24\x35\xaa\x02\x10\x76\x6c\x34\xe6\x49\x01\x3c\xa9\xd9\xfd\xa0\x2d\x3b\x39\x3d\x78\x13\xa0\x00\x94\x7d\x72\xa4\x7c\x46\x66\x61\xa7\xe5\xee\xe8\xf7\x78\xe0\x12\x65\x5a\xd7\xae\xae\x4c\xf9\x2e\x33\xad\x63\x9b\x33\xa1\xae\x96\xeb\xe5\xea\xd3\xbd\xbe\xe9\x9d\xdb\x44\x67\xcd\x50\xe3\xb1\x7d\x8a\xba\xc9\x2c\x53\xad\x17\x17\xe5\x6e\x96\xaf\x44\xe9\xb1\xae\x56\x00\x16\xf8\x49\x07\xeb\x7b\x3f\xed\x10\xf3\x30\xbd\xd2\x5e\xf8\x03\x6c\x80\xe7\x8e\xb6\x83\xb2\xcc\xc1\x47\xac\x3d\xee\x40\xb1\xff\x18\x6d\xcc\x88\x81\x61\x95\xfd\xdc\x9e\x50\x55\xab\xaa\xc2\x02\x0f\xdc\x52\xef\x14\x29\xe6\x5b\xae\xc5\xe4\xd9\xef\x4f\x97\xcf\xc1\x44\x7f\xfc\xc8\x34\xa2\x63\x85\x8b\x9d\x20\xb6\x60\x32\x3b\x64\xfe\xd3\xb3\x28\x28\x34\xc8\x2c\x29\x06\xe1\xe5\x75\xd0\x34\xf5\xee\x84\xa7\x3e\x8d\xb3\x1c\xf4\x76\x80\x59\xf7\x9b\x98\xb5\x3e\xa5\xbb\xca\xc2\xa6\xcf\x56\x87\x2f\x31\x28\x1f\xb4\x9e\x71\xb9\x0f\x9f\xe5\x59\x38\xbf\x66\xce\xd2\xf7\x1c\xfb\xf4\x56\x23\xe7\xe2\xdf\x4d\xb6\x7b\xeb\xb8\xe3\xaf\x62\xc8\x91\x1e\x7f\x85\x96\x9c\x70\xf1\x3f\x00\x00\xff\xff\x15\x98\xb4\xee\x6a\x03\x00\x00"),
		},
		"/memcache-svc.yaml.tmpl": &vfsgen۰CompressedFileInfo{
			name:             "memcache-svc.yaml.tmpl",
			modTime:          time.Date(1970, 1, 1, 0, 0, 0, 0, time.UTC),
			uncompressedSize: 206,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x8c\x3d\x0e\x02\x21\x10\x46\x7b\x4e\xf1\x5d\x00\x13\x2c\x39\x84\x8d\x89\xfd\x04\x3e\x23\x51\x58\x02\x64\x9b\xc9\xde\xdd\xb0\x6b\xe3\x76\xf3\xf3\xde\xb3\xd6\x1a\xa9\xe9\xc1\xd6\xd3\x52\x3c\x56\x67\xde\xa9\x44\x8f\x3b\xdb\x9a\x02\x4d\xe6\x90\x28\x43\xbc\x01\x8a\x64\x7a\x64\xe6\x20\xe1\xc5\xa8\x8a\xf4\xc4\xe5\x26\x99\xbd\x4a\x20\xb6\xed\x07\xed\xab\x87\xea\xff\x57\x15\x2c\x71\x62\xbd\x32\xcc\x62\x5d\xda\xe8\x73\x00\xec\x39\xbf\x5f\x0f\xc4\xc3\xb9\xab\x73\x06\xe8\xfc\x30\x8c\xa5\x1d\xce\xd9\xf8\x06\x00\x00\xff\xff\x20\x2f\xef\xba\xce\x00\x00\x00"),
		},
	}
	fs["/"].(*vfsgen۰DirInfo).entries = []os.FileInfo{
		fs["/flux-account.yaml.tmpl"].(os.FileInfo),
		fs["/flux-config.yaml.tmpl"].(os.FileInfo),
		fs["/flux-deployment.yaml.tmpl"].(os.FileInfo),
		fs["/flux-secret.yaml.tmpl"].(os.FileInfo),
		fs["/memcache-dep.yaml.tmpl"].(os.FileInfo),
		fs["/memcache-svc.yaml.tmpl"].(os.FileInfo),
	}

	return fs
}()

type vfsgen۰FS map[string]interface{}

func (fs vfsgen۰FS) Open(path string) (http.File, error) {
	path = pathpkg.Clean("/" + path)
	f, ok := fs[path]
	if !ok {
		return nil, &os.PathError{Op: "open", Path: path, Err: os.ErrNotExist}
	}

	switch f := f.(type) {
	case *vfsgen۰CompressedFileInfo:
		gr, err := gzip.NewReader(bytes.NewReader(f.compressedContent))
		if err != nil {
			// This should never happen because we generate the gzip bytes such that they are always valid.
			panic("unexpected error reading own gzip compressed bytes: " + err.Error())
		}
		return &vfsgen۰CompressedFile{
			vfsgen۰CompressedFileInfo: f,
			gr:                        gr,
		}, nil
	case *vfsgen۰DirInfo:
		return &vfsgen۰Dir{
			vfsgen۰DirInfo: f,
		}, nil
	default:
		// This should never happen because we generate only the above types.
		panic(fmt.Sprintf("unexpected type %T", f))
	}
}

// vfsgen۰CompressedFileInfo is a static definition of a gzip compressed file.
type vfsgen۰CompressedFileInfo struct {
	name              string
	modTime           time.Time
	compressedContent []byte
	uncompressedSize  int64
}

func (f *vfsgen۰CompressedFileInfo) Readdir(count int) ([]os.FileInfo, error) {
	return nil, fmt.Errorf("cannot Readdir from file %s", f.name)
}
func (f *vfsgen۰CompressedFileInfo) Stat() (os.FileInfo, error) { return f, nil }

func (f *vfsgen۰CompressedFileInfo) GzipBytes() []byte {
	return f.compressedContent
}

func (f *vfsgen۰CompressedFileInfo) Name() string       { return f.name }
func (f *vfsgen۰CompressedFileInfo) Size() int64        { return f.uncompressedSize }
func (f *vfsgen۰CompressedFileInfo) Mode() os.FileMode  { return 0444 }
func (f *vfsgen۰CompressedFileInfo) ModTime() time.Time { return f.modTime }
func (f *vfsgen۰CompressedFileInfo) IsDir() bool        { return false }
func (f *vfsgen۰CompressedFileInfo) Sys() interface{}   { return nil }

// vfsgen۰CompressedFile is an opened compressedFile instance.
type vfsgen۰CompressedFile struct {
	*vfsgen۰CompressedFileInfo
	gr      *gzip.Reader
	grPos   int64 // Actual gr uncompressed position.
	seekPos int64 // Seek uncompressed position.
}

func (f *vfsgen۰CompressedFile) Read(p []byte) (n int, err error) {
	if f.grPos > f.seekPos {
		// Rewind to beginning.
		err = f.gr.Reset(bytes.NewReader(f.compressedContent))
		if err != nil {
			return 0, err
		}
		f.grPos = 0
	}
	if f.grPos < f.seekPos {
		// Fast-forward.
		_, err = io.CopyN(ioutil.Discard, f.gr, f.seekPos-f.grPos)
		if err != nil {
			return 0, err
		}
		f.grPos = f.seekPos
	}
	n, err = f.gr.Read(p)
	f.grPos += int64(n)
	f.seekPos = f.grPos
	return n, err
}
func (f *vfsgen۰CompressedFile) Seek(offset int64, whence int) (int64, error) {
	switch whence {
	case io.SeekStart:
		f.seekPos = 0 + offset
	case io.SeekCurrent:
		f.seekPos += offset
	case io.SeekEnd:
		f.seekPos = f.uncompressedSize + offset
	default:
		panic(fmt.Errorf("invalid whence value: %v", whence))
	}
	return f.seekPos, nil
}
func (f *vfsgen۰CompressedFile) Close() error {
	return f.gr.Close()
}

// vfsgen۰DirInfo is a static definition of a directory.
type vfsgen۰DirInfo struct {
	name    string
	modTime time.Time
	entries []os.FileInfo
}

func (d *vfsgen۰DirInfo) Read([]byte) (int, error) {
	return 0, fmt.Errorf("cannot Read from directory %s", d.name)
}
func (d *vfsgen۰DirInfo) Close() error               { return nil }
func (d *vfsgen۰DirInfo) Stat() (os.FileInfo, error) { return d, nil }

func (d *vfsgen۰DirInfo) Name() string       { return d.name }
func (d *vfsgen۰DirInfo) Size() int64        { return 0 }
func (d *vfsgen۰DirInfo) Mode() os.FileMode  { return 0755 | os.ModeDir }
func (d *vfsgen۰DirInfo) ModTime() time.Time { return d.modTime }
func (d *vfsgen۰DirInfo) IsDir() bool        { return true }
func (d *vfsgen۰DirInfo) Sys() interface{}   { return nil }

// vfsgen۰Dir is an opened dir instance.
type vfsgen۰Dir struct {
	*vfsgen۰DirInfo
	pos int // Position within entries for Seek and Readdir.
}

func (d *vfsgen۰Dir) Seek(offset int64, whence int) (int64, error) {
	if offset == 0 && whence == io.SeekStart {
		d.pos = 0
		return 0, nil
	}
	return 0, fmt.Errorf("unsupported Seek in directory %s", d.name)
}

func (d *vfsgen۰Dir) Readdir(count int) ([]os.FileInfo, error) {
	if d.pos >= len(d.entries) && count > 0 {
		return nil, io.EOF
	}
	if count <= 0 || count > len(d.entries)-d.pos {
		count = len(d.entries) - d.pos
	}
	e := d.entries[d.pos : d.pos+count]
	d.pos += count
	return e, nil
}
